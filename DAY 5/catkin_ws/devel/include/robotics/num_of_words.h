// Generated by gencpp from file robotics/num_of_words.msg
// DO NOT EDIT!


#ifndef ROBOTICS_MESSAGE_NUM_OF_WORDS_H
#define ROBOTICS_MESSAGE_NUM_OF_WORDS_H

#include <ros/service_traits.h>


#include <robotics/num_of_wordsRequest.h>
#include <robotics/num_of_wordsResponse.h>


namespace robotics
{

struct num_of_words
{

typedef num_of_wordsRequest Request;
typedef num_of_wordsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct num_of_words
} // namespace robotics


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::robotics::num_of_words > {
  static const char* value()
  {
    return "b4834320f090e9235da913886638fb4e";
  }

  static const char* value(const ::robotics::num_of_words&) { return value(); }
};

template<>
struct DataType< ::robotics::num_of_words > {
  static const char* value()
  {
    return "robotics/num_of_words";
  }

  static const char* value(const ::robotics::num_of_words&) { return value(); }
};


// service_traits::MD5Sum< ::robotics::num_of_wordsRequest> should match
// service_traits::MD5Sum< ::robotics::num_of_words >
template<>
struct MD5Sum< ::robotics::num_of_wordsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::robotics::num_of_words >::value();
  }
  static const char* value(const ::robotics::num_of_wordsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::robotics::num_of_wordsRequest> should match
// service_traits::DataType< ::robotics::num_of_words >
template<>
struct DataType< ::robotics::num_of_wordsRequest>
{
  static const char* value()
  {
    return DataType< ::robotics::num_of_words >::value();
  }
  static const char* value(const ::robotics::num_of_wordsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::robotics::num_of_wordsResponse> should match
// service_traits::MD5Sum< ::robotics::num_of_words >
template<>
struct MD5Sum< ::robotics::num_of_wordsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::robotics::num_of_words >::value();
  }
  static const char* value(const ::robotics::num_of_wordsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::robotics::num_of_wordsResponse> should match
// service_traits::DataType< ::robotics::num_of_words >
template<>
struct DataType< ::robotics::num_of_wordsResponse>
{
  static const char* value()
  {
    return DataType< ::robotics::num_of_words >::value();
  }
  static const char* value(const ::robotics::num_of_wordsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROBOTICS_MESSAGE_NUM_OF_WORDS_H
